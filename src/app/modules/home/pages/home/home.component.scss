@import '../../../../../styles.scss';
@mixin glitchCopy {
  content: attr(data-text);
  position: absolute;
}

.clouds {
	position:absolute;
	display:block;
	top:4000; bottom:0;
	left:0; right:0;
	width:100%; height:100%;
  z-index: -3;
  background:transparent url('https://i.imgur.com/mHbScrQ.png') repeat top center;
  animation: move-clouds-back 100s linear infinite;
}
@keyframes move-clouds-back {
	from {background-position:0 0;}
	to {background-position:10000px 0;}
}


//
.home {
  padding-top: 10%;
}
.titleText {
  @include title(350%);
  letter-spacing: -0.050em;
}
.btnDiv {
  display: flex;
  justify-content: center;
  align-items: center;
}

//
#app {
	display: flex;
	justify-content: center;
	align-items: center;
	background-position: center;
	z-index: 1;
}

.sub {
  @include title(100%);
  display: flex;
	justify-content: center;
	align-items: center;
  text-align: center;
	color: rgba(255, 255, 255, 0.87);
}

/* Crea la animacion de glitch con animacion 5 seg, loop infinito, alternando en reversa */
.glitch {
  @include title(550%);
	position: relative;
	color: white;
	letter-spacing: 0;
	animation: glitch-skew 1s infinite linear alternate-reverse;
	&::before{
		@include glitchCopy;
		left: 2px;
		text-shadow: -2px 0 #ff00c1;
		clip: rect(44px, 450px, 56px, 0);
		animation: glitch-anim 5s infinite linear alternate-reverse;
	}
	&::after {
		@include glitchCopy;
		left: -2px;
		text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
		animation: glitch-anim2 1s infinite linear alternate-reverse;
	}
}
/* Crea la animacion glitch con 20 steps*/
@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
    }
  }
}
/* Lo mismo que la funcion anterior, pero la hace un poco mas random y no tan linear*/
@keyframes glitch-anim2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
    }
  }
}

/////////////////////////////////////////////////////////////////

// n is number of stars required
@function multiple-box-shadow ($n) {
  $value: '#{random(2000)}px #{random(2000)}px #FFF';
  @for $i from 2 through $n {
    $value: '#{$value} , #{random(2000)}px #{random(2000)}px #FFF';
  }
  @return unquote($value);
}
$shadows-small: multiple-box-shadow(150);
$shadows-medium: multiple-box-shadow(500);
$shadows-big: multiple-box-shadow(130);

#stars {
  z-index: -1;
  position: fixed;
  width: 1px;
  height: 1px;
  background: transparent;
  box-shadow: $shadows-small;
  animation: animStar 50s linear infinite;
  &:after {
    content: " ";
    position: absolute;
    top: 2000px;
    width: 1px;
    height: 1px;
    background: transparent;
    box-shadow: $shadows-small;
  }
}
#stars2 {
  z-index: -1;
  position: fixed;
  width: 2px;
  height: 2px;
  background: transparent;
  box-shadow: $shadows-medium;
  animation: animStar 100s linear infinite;
  &:after {
    content: " ";
    position: absolute;
    top: 2000px;
    width: 2px;
    height: 2px;
    background: transparent;
    box-shadow: $shadows-medium;
  }
}
#stars3 {
  z-index: -1;
  position: fixed;
  width: 3px;
  height: 3px;
  background: transparent;
  box-shadow: $shadows-big;
  animation: animStar 150s linear infinite;
  &:after {
    content: " ";
    position: absolute;
    top: 2000px;
    width: 3px;
    height: 3px;
    background: transparent;
    box-shadow: $shadows-big;
  }
}
@keyframes animStar {
  from {
    transform: translateY(0px);
  }
  to {
    transform: translateY(-2000px);
  }
};
